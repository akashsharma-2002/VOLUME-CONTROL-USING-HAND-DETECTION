#USING HAND CLASS AND CONTROLLING VOLUME
import mediapipe as mp
import cv2
import time
import Hand_det_class as hc
import math
import pycaw
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
import numpy as np

devices = AudioUtilities.GetSpeakers()
interface = devices.Activate(
    IAudioEndpointVolume.iid, CLSCTX_ALL, None)
volume = cast(interface, POINTER(IAudioEndpointVolume))
volRange=volume.GetVolumeRange()
#print(volume.GetVolumeRange()) # (-96.0, 0.0, 1.5) here min volume is [-96 and max is 0]
minVol=volRange[0] # -96.0
maxVol=volRange[1] # 0.0


cap=cv2.VideoCapture(0) #enables front cam
detector=hc.handDetector(detectionCon=0.75,trackCon=0.75)

vol=0
volbar=400  #The least y axis length
volper=0

while True:
    success,img=cap.read()
    img=detector.findHands(img)
    lmlist=detector.findPosition(img,draw=False)
    if len(lmlist)!=0:
        #print(lmlist[4],lmlist[8]) #TIP OF THUMB IS 4 , TIP OF INDEX FINGER IS 8

        x1,y1=lmlist[4][1],lmlist[4][2] # defining x1,y1 as thubms x and y postion
        x2,y2=lmlist[8][1],lmlist[8][2] #defining x2,y2 as index finger x  and postion

        cx,cy=(x1+x2)//2,(y1+y2)//2 #making centre point of the line for x and y in betweeen thumbs and index finger

        lenght=math.hypot(x2-x1,y2-y1)
        #print(lenght)
        #np.interp changes any value from one form to other form
        vol=np.interp(lenght,[30,170],[minVol,maxVol])
        volbar=np.interp(lenght,[30,170],[400,150]) #here the minium is not -96 or 0 its 400 and 150 at y axix
        volper=np.interp(lenght,[30,170],[0,100])

        #print(vol)
        volume.SetMasterVolumeLevel(vol, None)

        cv2.circle(img,(x1,y1),10,(255,0,255),cv2.FILLED)
        cv2.circle(img,(x2,y2),10,(255,0,255),cv2.FILLED)
        cv2.line(img,(x1,y1),(x2,y2),(255,0,255),2)
        cv2.circle(img, (cx,cy), 10, (255, 0, 255), cv2.FILLED)

        if lenght<30:
            cv2.circle(img,(cx,cy),10,(0,0,0),cv2.FILLED)
        elif lenght>170:
            cv2.circle(img,(cx,cy),10,(100,150,100),cv2.FILLED)

    cv2.rectangle(img,(40,150),(75,400),(200,0,200),2)
    cv2.rectangle(img,(40,int(volbar)),(75,400),(200,0,200),cv2.FILLED)
    cv2.putText(img,f"{int(volper)}%",(40,450),cv2.FONT_ITALIC,1,(200,0,0),4)
    cv2.imshow("Image",img)
    cv2.waitKey(1)
